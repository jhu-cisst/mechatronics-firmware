// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pi_controller,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc6slx45fgg484-2,HLS_INPUT_CLOCK=6.600000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.637625,HLS_SYN_LAT=11,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=413,HLS_SYN_LUT=942}" *)

module pi_controller (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        feedback_V,
        setpoint_V,
        kp_V,
        ki_V,
        i_term_limit_V,
        output_limit_V,
        error_out_V,
        i_term_out_V,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 12'b1;
parameter    ap_ST_st2_fsm_1 = 12'b10;
parameter    ap_ST_st3_fsm_2 = 12'b100;
parameter    ap_ST_st4_fsm_3 = 12'b1000;
parameter    ap_ST_st5_fsm_4 = 12'b10000;
parameter    ap_ST_st6_fsm_5 = 12'b100000;
parameter    ap_ST_st7_fsm_6 = 12'b1000000;
parameter    ap_ST_st8_fsm_7 = 12'b10000000;
parameter    ap_ST_st9_fsm_8 = 12'b100000000;
parameter    ap_ST_st10_fsm_9 = 12'b1000000000;
parameter    ap_ST_st11_fsm_10 = 12'b10000000000;
parameter    ap_ST_st12_fsm_11 = 12'b100000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv18_0 = 18'b000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv5_1F = 5'b11111;
parameter    ap_const_lv6_3F = 6'b111111;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv25_0 = 25'b0000000000000000000000000;
parameter    ap_const_lv35_0 = 35'b00000000000000000000000000000000000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv26_0 = 26'b00000000000000000000000000;
parameter    ap_const_lv36_0 = 36'b000000000000000000000000000000000000;
parameter    ap_const_lv7_7F = 7'b1111111;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv18_1FFFF = 18'b11111111111111111;
parameter    ap_const_lv18_20000 = 18'b100000000000000000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] feedback_V;
input  [15:0] setpoint_V;
input  [17:0] kp_V;
input  [17:0] ki_V;
input  [15:0] i_term_limit_V;
input  [15:0] output_limit_V;
output  [16:0] error_out_V;
output  [17:0] i_term_out_V;
output  [10:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[16:0] error_out_V;
reg[17:0] i_term_out_V;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm = 12'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_28;
reg   [17:0] i_term_V = 18'b000000000000000000;
wire  signed [34:0] OP2_V_fu_215_p1;
reg   [0:0] signbit_reg_1415 = 1'b0;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_62;
reg   [17:0] p_Val2_1_reg_1422 = 18'b000000000000000000;
reg   [0:0] tmp_10_reg_1427 = 1'b0;
wire   [0:0] tmp_2_fu_273_p2;
reg   [0:0] tmp_2_reg_1432 = 1'b0;
reg   [8:0] tmp_3_reg_1437 = 9'b000000000;
reg   [0:0] tmp_33_reg_1442 = 1'b0;
wire   [0:0] Range2_all_ones_fu_307_p2;
reg   [0:0] Range2_all_ones_reg_1447 = 1'b0;
wire   [0:0] Range1_all_ones_fu_323_p2;
reg   [0:0] Range1_all_ones_reg_1452 = 1'b0;
wire   [0:0] Range1_all_zeros_fu_329_p2;
reg   [0:0] Range1_all_zeros_reg_1459 = 1'b0;
reg   [0:0] signbit_1_reg_1464 = 1'b0;
reg   [17:0] p_Val2_6_reg_1471 = 18'b000000000000000000;
reg   [0:0] tmp_40_reg_1476 = 1'b0;
wire   [0:0] tmp_11_fu_399_p2;
reg   [0:0] tmp_11_reg_1481 = 1'b0;
reg   [8:0] tmp_12_reg_1486 = 9'b000000000;
reg   [0:0] tmp_43_reg_1491 = 1'b0;
reg   [5:0] p_Result_4_reg_1496 = 6'b000000;
reg   [6:0] p_Result_8_reg_1501 = 7'b0000000;
wire   [17:0] p_Val2_2_fu_466_p2;
reg   [17:0] p_Val2_2_reg_1507 = 18'b000000000000000000;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_103;
reg   [0:0] newsignbit_reg_1513 = 1'b0;
wire   [0:0] p_41_i_fu_484_p2;
reg   [0:0] p_41_i_reg_1520 = 1'b0;
wire   [17:0] p_Val2_7_fu_512_p2;
reg   [17:0] p_Val2_7_reg_1525 = 18'b000000000000000000;
reg   [0:0] newsignbit_1_reg_1531 = 1'b0;
wire   [0:0] Range1_all_ones_1_fu_530_p2;
reg   [0:0] Range1_all_ones_1_reg_1538 = 1'b0;
wire   [0:0] Range1_all_zeros_1_fu_535_p2;
reg   [0:0] Range1_all_zeros_1_reg_1545 = 1'b0;
wire   [0:0] p_41_i_i_fu_545_p2;
reg   [0:0] p_41_i_i_reg_1550 = 1'b0;
wire   [0:0] p_38_i_fu_573_p2;
reg   [0:0] p_38_i_reg_1555 = 1'b0;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_126;
wire   [0:0] brmerge_i_fu_584_p2;
reg   [0:0] brmerge_i_reg_1560 = 1'b0;
wire   [0:0] brmerge40_demorgan_i_fu_589_p2;
reg   [0:0] brmerge40_demorgan_i_reg_1565 = 1'b0;
wire   [0:0] tmp22_demorgan_fu_594_p2;
reg   [0:0] tmp22_demorgan_reg_1570 = 1'b0;
wire   [0:0] p_38_i_i_fu_622_p2;
reg   [0:0] p_38_i_i_reg_1575 = 1'b0;
wire   [0:0] brmerge_i_i1_fu_633_p2;
reg   [0:0] brmerge_i_i1_reg_1580 = 1'b0;
wire   [0:0] brmerge40_demorgan_i_i_fu_638_p2;
reg   [0:0] brmerge40_demorgan_i_i_reg_1585 = 1'b0;
wire   [0:0] tmp24_demorgan_fu_643_p2;
reg   [0:0] tmp24_demorgan_reg_1590 = 1'b0;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_149;
wire   [17:0] p_Val2_12_fu_699_p3;
reg   [17:0] p_Val2_12_reg_1600 = 18'b000000000000000000;
wire   [17:0] tmp_19_fu_757_p3;
reg   [17:0] tmp_19_reg_1605 = 18'b000000000000000000;
wire   [10:0] tmp_44_fu_765_p1;
reg   [10:0] tmp_44_reg_1611 = 11'b00000000000;
wire   [0:0] overflow_2_fu_793_p2;
reg   [0:0] overflow_2_reg_1616 = 1'b0;
wire   [16:0] r_V_1_fu_803_p2;
reg   [16:0] r_V_1_reg_1621 = 17'b00000000000000000;
reg   [0:0] isneg_reg_1626 = 1'b0;
wire   [10:0] tmp_47_fu_817_p1;
reg   [10:0] tmp_47_reg_1632 = 11'b00000000000;
wire   [0:0] brmerge_i_i2_fu_845_p2;
reg   [0:0] brmerge_i_i2_reg_1637 = 1'b0;
wire   [0:0] brmerge39_i_i_fu_863_p2;
reg   [0:0] brmerge39_i_i_reg_1642 = 1'b0;
wire   [17:0] p_Val2_10_mux_fu_955_p3;
reg   [17:0] p_Val2_10_mux_reg_1647 = 18'b000000000000000000;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_176;
wire   [17:0] sel_tmp4_fu_985_p3;
reg   [17:0] sel_tmp4_reg_1652 = 18'b000000000000000000;
wire   [0:0] sel_tmp7_fu_1004_p2;
reg   [0:0] sel_tmp7_reg_1657 = 1'b0;
reg   [0:0] isneg_1_reg_1662 = 1'b0;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_189;
wire   [17:0] p_Val2_14_fu_1037_p1;
reg   [17:0] p_Val2_14_reg_1669 = 18'b000000000000000000;
wire   [0:0] newsignbit_4_fu_1041_p3;
reg   [0:0] newsignbit_4_reg_1675 = 1'b0;
wire   [0:0] tmp_28_fu_1055_p2;
reg   [0:0] tmp_28_reg_1681 = 1'b0;
wire   [17:0] tmp_29_fu_1093_p3;
reg   [17:0] tmp_29_reg_1686 = 18'b000000000000000000;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_204;
wire   [0:0] tmp_31_fu_1117_p2;
reg   [0:0] tmp_31_reg_1691 = 1'b0;
wire   [10:0] tmp_52_fu_1123_p1;
reg   [10:0] tmp_52_reg_1698 = 11'b00000000000;
wire   [0:0] overflow_4_fu_1151_p2;
reg   [0:0] overflow_4_reg_1703 = 1'b0;
wire   [0:0] tmp_34_fu_1175_p2;
reg   [0:0] tmp_34_reg_1708 = 1'b0;
reg   [0:0] isneg_2_reg_1714 = 1'b0;
wire   [10:0] tmp_55_fu_1189_p1;
reg   [10:0] tmp_55_reg_1720 = 11'b00000000000;
wire   [0:0] brmerge_i_i4_fu_1217_p2;
reg   [0:0] brmerge_i_i4_reg_1725 = 1'b0;
wire   [0:0] brmerge39_i_i1_fu_1235_p2;
reg   [0:0] brmerge39_i_i1_reg_1730 = 1'b0;
wire   [17:0] p_Val2_20_mux_fu_1294_p3;
reg   [17:0] p_Val2_20_mux_reg_1735 = 18'b000000000000000000;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_229;
wire   [17:0] sel_tmp2_fu_1321_p3;
reg   [17:0] sel_tmp2_reg_1740 = 18'b000000000000000000;
wire   [0:0] sel_tmp6_fu_1339_p2;
reg   [0:0] sel_tmp6_reg_1745 = 1'b0;
wire   [17:0] p_Val2_11_fu_1010_p3;
wire   [16:0] r_V_fu_204_p2;
reg   [16:0] error_out_V_preg = 17'b00000000000000000;
reg   [17:0] i_term_out_V_preg = 18'b000000000000000000;
wire   [16:0] lhs_V_fu_196_p1;
wire   [16:0] rhs_V_fu_200_p1;
wire   [17:0] grp_fu_219_p0;
wire  signed [16:0] grp_fu_219_p1;
wire   [17:0] grp_fu_229_p0;
wire  signed [16:0] grp_fu_229_p1;
wire   [34:0] grp_fu_219_p2;
wire   [0:0] tmp_22_fu_269_p1;
wire   [0:0] tmp_fu_253_p3;
wire   [4:0] p_Result_s_fu_297_p4;
wire   [5:0] p_Result_2_fu_313_p4;
wire   [28:0] tmp_8_fu_339_p3;
wire   [34:0] grp_fu_229_p2;
wire  signed [35:0] tmp_11_cast_fu_347_p1;
wire  signed [35:0] tmp_1_fu_351_p1;
wire   [35:0] p_Val2_5_fu_355_p2;
wire   [0:0] tmp_41_fu_395_p1;
wire   [0:0] tmp_39_fu_379_p3;
wire   [34:0] tmp_5_fu_443_p4;
wire   [0:0] tmp_6_fu_451_p2;
wire   [0:0] qb_assign_fu_457_p2;
wire   [17:0] tmp_7_fu_462_p1;
wire   [0:0] tmp_4_fu_479_p2;
wire   [35:0] tmp_13_fu_489_p4;
wire   [0:0] tmp_14_fu_497_p2;
wire   [0:0] qb_assign_1_fu_503_p2;
wire   [17:0] tmp_15_fu_508_p1;
wire   [0:0] Range2_all_ones_1_fu_525_p2;
wire   [0:0] tmp_17_fu_540_p2;
wire   [0:0] tmp_s_fu_551_p2;
wire   [0:0] carry_fu_556_p2;
wire   [0:0] deleted_zeros_fu_561_p3;
wire   [0:0] p_not_i_fu_578_p2;
wire   [0:0] deleted_ones_fu_567_p3;
wire   [0:0] tmp_16_fu_600_p2;
wire   [0:0] carry_1_fu_605_p2;
wire   [0:0] deleted_zeros_1_fu_610_p3;
wire   [0:0] p_not_i_i_fu_627_p2;
wire   [0:0] deleted_ones_1_fu_616_p3;
wire   [0:0] tmp_9_fu_649_p2;
wire   [0:0] tmp1_fu_659_p2;
wire   [0:0] underflow_fu_664_p2;
wire   [0:0] overflow_fu_654_p2;
wire   [0:0] tmp2_fu_675_p2;
wire   [0:0] brmerge_i_i_fu_669_p2;
wire   [0:0] underflow_not_fu_680_p2;
wire   [17:0] p_Val2_2_mux_fu_685_p3;
wire   [17:0] p_Val2_2_12_fu_692_p3;
wire   [0:0] tmp_18_fu_707_p2;
wire   [0:0] tmp3_fu_717_p2;
wire   [0:0] underflow_1_fu_722_p2;
wire   [0:0] overflow_1_fu_712_p2;
wire   [0:0] tmp4_fu_733_p2;
wire   [0:0] brmerge_i_i_i_fu_727_p2;
wire   [0:0] underflow_1_not_fu_738_p2;
wire   [17:0] p_Val2_7_mux_fu_743_p3;
wire   [17:0] p_Val2_7_13_fu_750_p3;
wire   [4:0] p_Result_1_fu_777_p4;
wire   [0:0] newsignbit_2_fu_769_p3;
wire   [0:0] p_not_i_i1_fu_787_p2;
wire   [16:0] rhs_V_1_fu_799_p1;
wire   [5:0] p_Result_3_fu_829_p4;
wire   [0:0] newsignbit_3_fu_821_p3;
wire   [0:0] p_not_i_i2_fu_839_p2;
wire   [0:0] p_not38_i_i_fu_857_p2;
wire   [0:0] newsignbit_0_not_i_i_fu_851_p2;
wire   [22:0] tmp_20_fu_872_p3;
wire  signed [23:0] tmp_25_cast_fu_869_p1;
wire   [23:0] tmp_28_cast_fu_879_p1;
wire   [17:0] p_Val2_8_fu_889_p3;
wire   [23:0] tmp_23_fu_903_p3;
wire   [0:0] tmp_25_fu_923_p2;
wire   [0:0] underflow_2_fu_933_p2;
wire   [0:0] overflow_3_fu_928_p2;
wire   [0:0] underflow_2_not_fu_943_p2;
wire   [0:0] brmerge_i_i_i1_fu_937_p2;
wire   [17:0] p_Val2_9_14_fu_916_p3;
wire   [0:0] tmp_21_fu_883_p2;
wire   [17:0] p_Val2_9_fu_896_p3;
wire   [17:0] p_Val2_s_15_fu_963_p3;
wire   [0:0] tmp_24_fu_910_p2;
wire   [0:0] sel_tmp3_demorgan_fu_979_p2;
wire   [17:0] sel_tmp_fu_971_p3;
wire   [0:0] brmerge5_fu_949_p2;
wire   [0:0] sel_tmp5_fu_992_p2;
wire   [0:0] tmp5_fu_998_p2;
wire  signed [18:0] tmp_27_fu_1019_p1;
wire  signed [18:0] tmp_26_fu_1016_p1;
wire   [18:0] p_Val2_13_fu_1023_p2;
wire   [0:0] isneg_5_not_fu_1069_p2;
wire   [0:0] brmerge_i_i3_fu_1065_p2;
wire   [0:0] underflow_3_fu_1061_p2;
wire   [0:0] brmerge6_fu_1074_p2;
wire   [17:0] p_Val2_15_mux_fu_1079_p3;
wire   [17:0] p_Val2_1_16_fu_1086_p3;
wire   [22:0] tmp_30_fu_1105_p3;
wire  signed [23:0] tmp_42_cast_fu_1101_p1;
wire   [23:0] tmp_45_cast_fu_1113_p1;
wire   [4:0] p_Result_5_fu_1135_p4;
wire   [0:0] newsignbit_5_fu_1127_p3;
wire   [0:0] p_not_i_i3_fu_1145_p2;
wire   [16:0] rhs_V_2_fu_1157_p1;
wire   [16:0] r_V_2_fu_1161_p2;
wire   [23:0] tmp_32_fu_1167_p3;
wire   [5:0] p_Result_6_fu_1201_p4;
wire   [0:0] newsignbit_6_fu_1193_p3;
wire   [0:0] p_not_i_i4_fu_1211_p2;
wire   [0:0] p_not38_i_i1_fu_1229_p2;
wire   [0:0] newsignbit_0_not_i_i1_fu_1223_p2;
wire   [17:0] p_Val2_15_fu_1241_p3;
wire   [0:0] tmp_35_fu_1262_p2;
wire   [0:0] underflow_4_fu_1272_p2;
wire   [0:0] overflow_5_fu_1267_p2;
wire   [0:0] underflow_4_not_fu_1282_p2;
wire   [0:0] brmerge_i_i_i2_fu_1276_p2;
wire   [17:0] p_Val2_17_fu_1255_p3;
wire   [17:0] p_Val2_3_17_fu_1248_p3;
wire   [17:0] p_Val2_4_18_fu_1302_p3;
wire   [0:0] sel_tmp15_demorgan_fu_1317_p2;
wire   [17:0] sel_tmp1_fu_1310_p3;
wire   [0:0] brmerge7_fu_1288_p2;
wire   [0:0] sel_tmp3_fu_1328_p2;
wire   [0:0] tmp6_fu_1333_p2;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_781;
wire   [17:0] p_Val2_18_fu_1344_p3;
wire   [6:0] tmp_58_fu_1367_p1;
wire   [10:0] ret_V_fu_1349_p4;
wire   [0:0] tmp_36_fu_1371_p2;
wire   [10:0] ret_V_1_fu_1377_p2;
wire   [0:0] tmp_57_fu_1359_p3;
wire   [10:0] p_s_fu_1383_p3;
wire    grp_fu_219_ce;
wire    grp_fu_229_ce;
reg   [11:0] ap_NS_fsm;
wire   [34:0] grp_fu_219_p00;
wire   [34:0] grp_fu_229_p00;


pi_controller_mul_18ns_17s_35_4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 35 ))
pi_controller_mul_18ns_17s_35_4_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_219_p0 ),
    .din1( grp_fu_219_p1 ),
    .ce( grp_fu_219_ce ),
    .dout( grp_fu_219_p2 )
);

pi_controller_mul_18ns_17s_35_4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 35 ))
pi_controller_mul_18ns_17s_35_4_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_229_p0 ),
    .din1( grp_fu_229_p1 ),
    .ce( grp_fu_229_ce ),
    .dout( grp_fu_229_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_Range1_all_ones_1_reg_1538
    if (ap_rst == 1'b1) begin
        Range1_all_ones_1_reg_1538 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            Range1_all_ones_1_reg_1538 <= Range1_all_ones_1_fu_530_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_Range1_all_ones_reg_1452
    if (ap_rst == 1'b1) begin
        Range1_all_ones_reg_1452 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            Range1_all_ones_reg_1452 <= Range1_all_ones_fu_323_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_Range1_all_zeros_1_reg_1545
    if (ap_rst == 1'b1) begin
        Range1_all_zeros_1_reg_1545 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            Range1_all_zeros_1_reg_1545 <= Range1_all_zeros_1_fu_535_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_Range1_all_zeros_reg_1459
    if (ap_rst == 1'b1) begin
        Range1_all_zeros_reg_1459 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            Range1_all_zeros_reg_1459 <= Range1_all_zeros_fu_329_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_Range2_all_ones_reg_1447
    if (ap_rst == 1'b1) begin
        Range2_all_ones_reg_1447 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            Range2_all_ones_reg_1447 <= Range2_all_ones_fu_307_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_brmerge39_i_i1_reg_1730
    if (ap_rst == 1'b1) begin
        brmerge39_i_i1_reg_1730 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
            brmerge39_i_i1_reg_1730 <= brmerge39_i_i1_fu_1235_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_brmerge39_i_i_reg_1642
    if (ap_rst == 1'b1) begin
        brmerge39_i_i_reg_1642 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            brmerge39_i_i_reg_1642 <= brmerge39_i_i_fu_863_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_brmerge40_demorgan_i_i_reg_1585
    if (ap_rst == 1'b1) begin
        brmerge40_demorgan_i_i_reg_1585 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            brmerge40_demorgan_i_i_reg_1585 <= brmerge40_demorgan_i_i_fu_638_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_brmerge40_demorgan_i_reg_1565
    if (ap_rst == 1'b1) begin
        brmerge40_demorgan_i_reg_1565 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            brmerge40_demorgan_i_reg_1565 <= brmerge40_demorgan_i_fu_589_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_brmerge_i_i1_reg_1580
    if (ap_rst == 1'b1) begin
        brmerge_i_i1_reg_1580 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            brmerge_i_i1_reg_1580 <= brmerge_i_i1_fu_633_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_brmerge_i_i2_reg_1637
    if (ap_rst == 1'b1) begin
        brmerge_i_i2_reg_1637 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            brmerge_i_i2_reg_1637 <= brmerge_i_i2_fu_845_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_brmerge_i_i4_reg_1725
    if (ap_rst == 1'b1) begin
        brmerge_i_i4_reg_1725 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
            brmerge_i_i4_reg_1725 <= brmerge_i_i4_fu_1217_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_brmerge_i_reg_1560
    if (ap_rst == 1'b1) begin
        brmerge_i_reg_1560 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            brmerge_i_reg_1560 <= brmerge_i_fu_584_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_error_out_V_preg
    if (ap_rst == 1'b1) begin
        error_out_V_preg <= ap_const_lv17_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            error_out_V_preg <= r_V_fu_204_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_i_term_V
    if (ap_rst == 1'b1) begin
        i_term_V <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
            i_term_V <= p_Val2_11_fu_1010_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_i_term_out_V_preg
    if (ap_rst == 1'b1) begin
        i_term_out_V_preg <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
            i_term_out_V_preg <= p_Val2_11_fu_1010_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_isneg_1_reg_1662
    if (ap_rst == 1'b1) begin
        isneg_1_reg_1662 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
            isneg_1_reg_1662 <= p_Val2_13_fu_1023_p2[ap_const_lv32_12];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_isneg_2_reg_1714
    if (ap_rst == 1'b1) begin
        isneg_2_reg_1714 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
            isneg_2_reg_1714 <= r_V_2_fu_1161_p2[ap_const_lv32_10];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_isneg_reg_1626
    if (ap_rst == 1'b1) begin
        isneg_reg_1626 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            isneg_reg_1626 <= r_V_1_fu_803_p2[ap_const_lv32_10];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_newsignbit_1_reg_1531
    if (ap_rst == 1'b1) begin
        newsignbit_1_reg_1531 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            newsignbit_1_reg_1531 <= p_Val2_7_fu_512_p2[ap_const_lv32_11];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_newsignbit_4_reg_1675
    if (ap_rst == 1'b1) begin
        newsignbit_4_reg_1675 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
            newsignbit_4_reg_1675 <= p_Val2_13_fu_1023_p2[ap_const_lv32_11];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_newsignbit_reg_1513
    if (ap_rst == 1'b1) begin
        newsignbit_reg_1513 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            newsignbit_reg_1513 <= p_Val2_2_fu_466_p2[ap_const_lv32_11];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_overflow_2_reg_1616
    if (ap_rst == 1'b1) begin
        overflow_2_reg_1616 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            overflow_2_reg_1616 <= overflow_2_fu_793_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_overflow_4_reg_1703
    if (ap_rst == 1'b1) begin
        overflow_4_reg_1703 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
            overflow_4_reg_1703 <= overflow_4_fu_1151_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_38_i_i_reg_1575
    if (ap_rst == 1'b1) begin
        p_38_i_i_reg_1575 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            p_38_i_i_reg_1575 <= p_38_i_i_fu_622_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_38_i_reg_1555
    if (ap_rst == 1'b1) begin
        p_38_i_reg_1555 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            p_38_i_reg_1555 <= p_38_i_fu_573_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_41_i_i_reg_1550
    if (ap_rst == 1'b1) begin
        p_41_i_i_reg_1550 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            p_41_i_i_reg_1550 <= p_41_i_i_fu_545_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_41_i_reg_1520
    if (ap_rst == 1'b1) begin
        p_41_i_reg_1520 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            p_41_i_reg_1520 <= p_41_i_fu_484_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Result_4_reg_1496
    if (ap_rst == 1'b1) begin
        p_Result_4_reg_1496 <= ap_const_lv6_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            p_Result_4_reg_1496 <= {{p_Val2_5_fu_355_p2[ap_const_lv32_23 : ap_const_lv32_1E]}};
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Result_8_reg_1501
    if (ap_rst == 1'b1) begin
        p_Result_8_reg_1501 <= ap_const_lv7_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            p_Result_8_reg_1501 <= {{p_Val2_5_fu_355_p2[ap_const_lv32_23 : ap_const_lv32_1D]}};
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_10_mux_reg_1647
    if (ap_rst == 1'b1) begin
        p_Val2_10_mux_reg_1647 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
            p_Val2_10_mux_reg_1647 <= p_Val2_10_mux_fu_955_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_12_reg_1600
    if (ap_rst == 1'b1) begin
        p_Val2_12_reg_1600 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            p_Val2_12_reg_1600 <= p_Val2_12_fu_699_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_14_reg_1669
    if (ap_rst == 1'b1) begin
        p_Val2_14_reg_1669 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
            p_Val2_14_reg_1669 <= p_Val2_14_fu_1037_p1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_1_reg_1422
    if (ap_rst == 1'b1) begin
        p_Val2_1_reg_1422 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            p_Val2_1_reg_1422 <= {{grp_fu_219_p2[ap_const_lv32_1C : ap_const_lv32_B]}};
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_20_mux_reg_1735
    if (ap_rst == 1'b1) begin
        p_Val2_20_mux_reg_1735 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
            p_Val2_20_mux_reg_1735 <= p_Val2_20_mux_fu_1294_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_2_reg_1507
    if (ap_rst == 1'b1) begin
        p_Val2_2_reg_1507 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            p_Val2_2_reg_1507 <= p_Val2_2_fu_466_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_6_reg_1471
    if (ap_rst == 1'b1) begin
        p_Val2_6_reg_1471 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            p_Val2_6_reg_1471 <= {{p_Val2_5_fu_355_p2[ap_const_lv32_1C : ap_const_lv32_B]}};
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_7_reg_1525
    if (ap_rst == 1'b1) begin
        p_Val2_7_reg_1525 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            p_Val2_7_reg_1525 <= p_Val2_7_fu_512_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_r_V_1_reg_1621
    if (ap_rst == 1'b1) begin
        r_V_1_reg_1621 <= ap_const_lv17_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            r_V_1_reg_1621 <= r_V_1_fu_803_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_sel_tmp2_reg_1740
    if (ap_rst == 1'b1) begin
        sel_tmp2_reg_1740 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
            sel_tmp2_reg_1740 <= sel_tmp2_fu_1321_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_sel_tmp4_reg_1652
    if (ap_rst == 1'b1) begin
        sel_tmp4_reg_1652 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
            sel_tmp4_reg_1652 <= sel_tmp4_fu_985_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_sel_tmp6_reg_1745
    if (ap_rst == 1'b1) begin
        sel_tmp6_reg_1745 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
            sel_tmp6_reg_1745 <= sel_tmp6_fu_1339_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_sel_tmp7_reg_1657
    if (ap_rst == 1'b1) begin
        sel_tmp7_reg_1657 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
            sel_tmp7_reg_1657 <= sel_tmp7_fu_1004_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_signbit_1_reg_1464
    if (ap_rst == 1'b1) begin
        signbit_1_reg_1464 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            signbit_1_reg_1464 <= p_Val2_5_fu_355_p2[ap_const_lv32_23];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_signbit_reg_1415
    if (ap_rst == 1'b1) begin
        signbit_reg_1415 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            signbit_reg_1415 <= grp_fu_219_p2[ap_const_lv32_22];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp22_demorgan_reg_1570
    if (ap_rst == 1'b1) begin
        tmp22_demorgan_reg_1570 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            tmp22_demorgan_reg_1570 <= tmp22_demorgan_fu_594_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp24_demorgan_reg_1590
    if (ap_rst == 1'b1) begin
        tmp24_demorgan_reg_1590 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            tmp24_demorgan_reg_1590 <= tmp24_demorgan_fu_643_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_10_reg_1427
    if (ap_rst == 1'b1) begin
        tmp_10_reg_1427 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            tmp_10_reg_1427 <= grp_fu_219_p2[ap_const_lv32_1C];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_11_reg_1481
    if (ap_rst == 1'b1) begin
        tmp_11_reg_1481 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            tmp_11_reg_1481 <= tmp_11_fu_399_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_12_reg_1486
    if (ap_rst == 1'b1) begin
        tmp_12_reg_1486 <= ap_const_lv9_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            tmp_12_reg_1486 <= {{grp_fu_229_p2[ap_const_lv32_9 : ap_const_lv32_1]}};
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_19_reg_1605
    if (ap_rst == 1'b1) begin
        tmp_19_reg_1605 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            tmp_19_reg_1605 <= tmp_19_fu_757_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_28_reg_1681
    if (ap_rst == 1'b1) begin
        tmp_28_reg_1681 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
            tmp_28_reg_1681 <= tmp_28_fu_1055_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_29_reg_1686
    if (ap_rst == 1'b1) begin
        tmp_29_reg_1686 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
            tmp_29_reg_1686 <= tmp_29_fu_1093_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_2_reg_1432
    if (ap_rst == 1'b1) begin
        tmp_2_reg_1432 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            tmp_2_reg_1432 <= tmp_2_fu_273_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_31_reg_1691
    if (ap_rst == 1'b1) begin
        tmp_31_reg_1691 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
            tmp_31_reg_1691 <= tmp_31_fu_1117_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_33_reg_1442
    if (ap_rst == 1'b1) begin
        tmp_33_reg_1442 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            tmp_33_reg_1442 <= grp_fu_219_p2[ap_const_lv32_1D];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_34_reg_1708
    if (ap_rst == 1'b1) begin
        tmp_34_reg_1708 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
            tmp_34_reg_1708 <= tmp_34_fu_1175_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_3_reg_1437
    if (ap_rst == 1'b1) begin
        tmp_3_reg_1437 <= ap_const_lv9_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            tmp_3_reg_1437 <= {{grp_fu_219_p2[ap_const_lv32_9 : ap_const_lv32_1]}};
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_40_reg_1476
    if (ap_rst == 1'b1) begin
        tmp_40_reg_1476 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            tmp_40_reg_1476 <= p_Val2_5_fu_355_p2[ap_const_lv32_1C];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_43_reg_1491
    if (ap_rst == 1'b1) begin
        tmp_43_reg_1491 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            tmp_43_reg_1491 <= p_Val2_5_fu_355_p2[ap_const_lv32_1D];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_44_reg_1611
    if (ap_rst == 1'b1) begin
        tmp_44_reg_1611 <= ap_const_lv11_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            tmp_44_reg_1611 <= tmp_44_fu_765_p1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_47_reg_1632
    if (ap_rst == 1'b1) begin
        tmp_47_reg_1632 <= ap_const_lv11_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            tmp_47_reg_1632 <= tmp_47_fu_817_p1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_52_reg_1698
    if (ap_rst == 1'b1) begin
        tmp_52_reg_1698 <= ap_const_lv11_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
            tmp_52_reg_1698 <= tmp_52_fu_1123_p1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_55_reg_1720
    if (ap_rst == 1'b1) begin
        tmp_55_reg_1720 <= ap_const_lv11_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
            tmp_55_reg_1720 <= tmp_55_fu_1189_p1;
        end
    end
end

always @ (ap_sig_cseq_ST_st12_fsm_11) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st12_fsm_11) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_204) begin
    if (ap_sig_bdd_204) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_229) begin
    if (ap_sig_bdd_229) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_781) begin
    if (ap_sig_bdd_781) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_28) begin
    if (ap_sig_bdd_28) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_62) begin
    if (ap_sig_bdd_62) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_103) begin
    if (ap_sig_bdd_103) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_126) begin
    if (ap_sig_bdd_126) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_149) begin
    if (ap_sig_bdd_149) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_176) begin
    if (ap_sig_bdd_176) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_189) begin
    if (ap_sig_bdd_189) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or r_V_fu_204_p2 or error_out_V_preg) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        error_out_V = r_V_fu_204_p2;
    end else begin
        error_out_V = error_out_V_preg;
    end
end

always @ (ap_sig_cseq_ST_st9_fsm_8 or p_Val2_11_fu_1010_p3 or i_term_out_V_preg) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        i_term_out_V = p_Val2_11_fu_1010_p3;
    end else begin
        i_term_out_V = i_term_out_V_preg;
    end
end
always @ (ap_start or ap_CS_fsm) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign OP2_V_fu_215_p1 = $signed(r_V_fu_204_p2);

assign Range1_all_ones_1_fu_530_p2 = (p_Result_8_reg_1501 == ap_const_lv7_7F? 1'b1: 1'b0);

assign Range1_all_ones_fu_323_p2 = (p_Result_2_fu_313_p4 == ap_const_lv6_3F? 1'b1: 1'b0);

assign Range1_all_zeros_1_fu_535_p2 = (p_Result_8_reg_1501 == ap_const_lv7_0? 1'b1: 1'b0);

assign Range1_all_zeros_fu_329_p2 = (p_Result_2_fu_313_p4 == ap_const_lv6_0? 1'b1: 1'b0);

assign Range2_all_ones_1_fu_525_p2 = (p_Result_4_reg_1496 == ap_const_lv6_3F? 1'b1: 1'b0);

assign Range2_all_ones_fu_307_p2 = (p_Result_s_fu_297_p4 == ap_const_lv5_1F? 1'b1: 1'b0);

assign ap_return = ((tmp_57_fu_1359_p3[0:0] === 1'b1) ? p_s_fu_1383_p3 : ret_V_fu_1349_p4);


always @ (ap_CS_fsm) begin
    ap_sig_bdd_103 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_126 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_149 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_176 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_189 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_204 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_229 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_28 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_62 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_781 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

assign brmerge39_i_i1_fu_1235_p2 = (p_not38_i_i1_fu_1229_p2 | newsignbit_0_not_i_i1_fu_1223_p2);

assign brmerge39_i_i_fu_863_p2 = (p_not38_i_i_fu_857_p2 | newsignbit_0_not_i_i_fu_851_p2);

assign brmerge40_demorgan_i_fu_589_p2 = (newsignbit_reg_1513 & deleted_ones_fu_567_p3);

assign brmerge40_demorgan_i_i_fu_638_p2 = (newsignbit_1_reg_1531 & deleted_ones_1_fu_616_p3);

assign brmerge5_fu_949_p2 = (overflow_3_fu_928_p2 | underflow_2_not_fu_943_p2);

assign brmerge6_fu_1074_p2 = (newsignbit_4_reg_1675 | isneg_5_not_fu_1069_p2);

assign brmerge7_fu_1288_p2 = (overflow_5_fu_1267_p2 | underflow_4_not_fu_1282_p2);

assign brmerge_i_fu_584_p2 = (newsignbit_reg_1513 | p_not_i_fu_578_p2);

assign brmerge_i_i1_fu_633_p2 = (newsignbit_1_reg_1531 | p_not_i_i_fu_627_p2);

assign brmerge_i_i2_fu_845_p2 = (newsignbit_3_fu_821_p3 | p_not_i_i2_fu_839_p2);

assign brmerge_i_i3_fu_1065_p2 = (isneg_1_reg_1662 ^ newsignbit_4_reg_1675);

assign brmerge_i_i4_fu_1217_p2 = (newsignbit_6_fu_1193_p3 | p_not_i_i4_fu_1211_p2);

assign brmerge_i_i_fu_669_p2 = (underflow_fu_664_p2 | overflow_fu_654_p2);

assign brmerge_i_i_i1_fu_937_p2 = (underflow_2_fu_933_p2 | overflow_3_fu_928_p2);

assign brmerge_i_i_i2_fu_1276_p2 = (underflow_4_fu_1272_p2 | overflow_5_fu_1267_p2);

assign brmerge_i_i_i_fu_727_p2 = (underflow_1_fu_722_p2 | overflow_1_fu_712_p2);

assign carry_1_fu_605_p2 = (tmp_40_reg_1476 & tmp_16_fu_600_p2);

assign carry_fu_556_p2 = (tmp_10_reg_1427 & tmp_s_fu_551_p2);

assign deleted_ones_1_fu_616_p3 = ((carry_1_fu_605_p2[0:0] === 1'b1) ? p_41_i_i_reg_1550 : Range1_all_ones_1_reg_1538);

assign deleted_ones_fu_567_p3 = ((carry_fu_556_p2[0:0] === 1'b1) ? p_41_i_reg_1520 : Range1_all_ones_reg_1452);

assign deleted_zeros_1_fu_610_p3 = ((carry_1_fu_605_p2[0:0] === 1'b1) ? Range1_all_ones_1_reg_1538 : Range1_all_zeros_1_reg_1545);

assign deleted_zeros_fu_561_p3 = ((carry_fu_556_p2[0:0] === 1'b1) ? Range1_all_ones_reg_1452 : Range1_all_zeros_reg_1459);

assign grp_fu_219_ce = ap_const_logic_1;

assign grp_fu_219_p0 = grp_fu_219_p00;

assign grp_fu_219_p00 = kp_V;

assign grp_fu_219_p1 = OP2_V_fu_215_p1;

assign grp_fu_229_ce = ap_const_logic_1;

assign grp_fu_229_p0 = grp_fu_229_p00;

assign grp_fu_229_p00 = ki_V;

assign grp_fu_229_p1 = OP2_V_fu_215_p1;

assign isneg_5_not_fu_1069_p2 = (isneg_1_reg_1662 ^ ap_const_lv1_1);

assign lhs_V_fu_196_p1 = setpoint_V;

assign newsignbit_0_not_i_i1_fu_1223_p2 = (newsignbit_6_fu_1193_p3 ^ ap_const_lv1_1);

assign newsignbit_0_not_i_i_fu_851_p2 = (newsignbit_3_fu_821_p3 ^ ap_const_lv1_1);

assign newsignbit_2_fu_769_p3 = i_term_limit_V[ap_const_lv32_A];

assign newsignbit_3_fu_821_p3 = r_V_1_fu_803_p2[ap_const_lv32_A];

assign newsignbit_4_fu_1041_p3 = p_Val2_13_fu_1023_p2[ap_const_lv32_11];

assign newsignbit_5_fu_1127_p3 = output_limit_V[ap_const_lv32_A];

assign newsignbit_6_fu_1193_p3 = r_V_2_fu_1161_p2[ap_const_lv32_A];

assign overflow_1_fu_712_p2 = (brmerge_i_i1_reg_1580 & tmp_18_fu_707_p2);

assign overflow_2_fu_793_p2 = (newsignbit_2_fu_769_p3 | p_not_i_i1_fu_787_p2);

assign overflow_3_fu_928_p2 = (brmerge_i_i2_reg_1637 & tmp_25_fu_923_p2);

assign overflow_4_fu_1151_p2 = (newsignbit_5_fu_1127_p3 | p_not_i_i3_fu_1145_p2);

assign overflow_5_fu_1267_p2 = (brmerge_i_i4_reg_1725 & tmp_35_fu_1262_p2);

assign overflow_fu_654_p2 = (brmerge_i_reg_1560 & tmp_9_fu_649_p2);

assign p_38_i_fu_573_p2 = (carry_fu_556_p2 & Range1_all_ones_reg_1452);

assign p_38_i_i_fu_622_p2 = (carry_1_fu_605_p2 & Range1_all_ones_1_reg_1538);

assign p_41_i_fu_484_p2 = (Range2_all_ones_reg_1447 & tmp_4_fu_479_p2);

assign p_41_i_i_fu_545_p2 = (Range2_all_ones_1_fu_525_p2 & tmp_17_fu_540_p2);

assign p_Result_1_fu_777_p4 = {{i_term_limit_V[ap_const_lv32_F : ap_const_lv32_B]}};

assign p_Result_2_fu_313_p4 = {{grp_fu_219_p2[ap_const_lv32_22 : ap_const_lv32_1D]}};

assign p_Result_3_fu_829_p4 = {{r_V_1_fu_803_p2[ap_const_lv32_10 : ap_const_lv32_B]}};

assign p_Result_5_fu_1135_p4 = {{output_limit_V[ap_const_lv32_F : ap_const_lv32_B]}};

assign p_Result_6_fu_1201_p4 = {{r_V_2_fu_1161_p2[ap_const_lv32_10 : ap_const_lv32_B]}};

assign p_Result_s_fu_297_p4 = {{grp_fu_219_p2[ap_const_lv32_22 : ap_const_lv32_1E]}};

assign p_Val2_10_mux_fu_955_p3 = ((brmerge_i_i_i1_fu_937_p2[0:0] === 1'b1) ? ap_const_lv18_1FFFF : p_Val2_9_14_fu_916_p3);

assign p_Val2_11_fu_1010_p3 = ((sel_tmp7_reg_1657[0:0] === 1'b1) ? p_Val2_10_mux_reg_1647 : sel_tmp4_reg_1652);

assign p_Val2_12_fu_699_p3 = ((underflow_not_fu_680_p2[0:0] === 1'b1) ? p_Val2_2_mux_fu_685_p3 : p_Val2_2_12_fu_692_p3);

assign p_Val2_13_fu_1023_p2 = ($signed(tmp_27_fu_1019_p1) + $signed(tmp_26_fu_1016_p1));

assign p_Val2_14_fu_1037_p1 = p_Val2_13_fu_1023_p2[17:0];

assign p_Val2_15_fu_1241_p3 = {{tmp_52_reg_1698}, {ap_const_lv7_0}};

assign p_Val2_15_mux_fu_1079_p3 = ((brmerge_i_i3_fu_1065_p2[0:0] === 1'b1) ? ap_const_lv18_1FFFF : p_Val2_14_reg_1669);

assign p_Val2_17_fu_1255_p3 = {{tmp_55_reg_1720}, {ap_const_lv7_0}};

assign p_Val2_18_fu_1344_p3 = ((sel_tmp6_reg_1745[0:0] === 1'b1) ? p_Val2_20_mux_reg_1735 : sel_tmp2_reg_1740);

assign p_Val2_1_16_fu_1086_p3 = ((underflow_3_fu_1061_p2[0:0] === 1'b1) ? ap_const_lv18_20000 : p_Val2_14_reg_1669);

assign p_Val2_20_mux_fu_1294_p3 = ((brmerge_i_i_i2_fu_1276_p2[0:0] === 1'b1) ? ap_const_lv18_1FFFF : p_Val2_17_fu_1255_p3);

assign p_Val2_2_12_fu_692_p3 = ((underflow_fu_664_p2[0:0] === 1'b1) ? ap_const_lv18_20000 : p_Val2_2_reg_1507);

assign p_Val2_2_fu_466_p2 = (p_Val2_1_reg_1422 + tmp_7_fu_462_p1);

assign p_Val2_2_mux_fu_685_p3 = ((brmerge_i_i_fu_669_p2[0:0] === 1'b1) ? ap_const_lv18_1FFFF : p_Val2_2_reg_1507);

assign p_Val2_3_17_fu_1248_p3 = ((overflow_4_reg_1703[0:0] === 1'b1) ? ap_const_lv18_1FFFF : p_Val2_15_fu_1241_p3);

assign p_Val2_4_18_fu_1302_p3 = ((underflow_4_fu_1272_p2[0:0] === 1'b1) ? ap_const_lv18_20000 : p_Val2_17_fu_1255_p3);

assign p_Val2_5_fu_355_p2 = ($signed(tmp_11_cast_fu_347_p1) + $signed(tmp_1_fu_351_p1));

assign p_Val2_7_13_fu_750_p3 = ((underflow_1_fu_722_p2[0:0] === 1'b1) ? ap_const_lv18_20000 : p_Val2_7_reg_1525);

assign p_Val2_7_fu_512_p2 = (p_Val2_6_reg_1471 + tmp_15_fu_508_p1);

assign p_Val2_7_mux_fu_743_p3 = ((brmerge_i_i_i_fu_727_p2[0:0] === 1'b1) ? ap_const_lv18_1FFFF : p_Val2_7_reg_1525);

assign p_Val2_8_fu_889_p3 = {{tmp_44_reg_1611}, {ap_const_lv7_0}};

assign p_Val2_9_14_fu_916_p3 = {{tmp_47_reg_1632}, {ap_const_lv7_0}};

assign p_Val2_9_fu_896_p3 = ((overflow_2_reg_1616[0:0] === 1'b1) ? ap_const_lv18_1FFFF : p_Val2_8_fu_889_p3);

assign p_Val2_s_15_fu_963_p3 = ((underflow_2_fu_933_p2[0:0] === 1'b1) ? ap_const_lv18_20000 : p_Val2_9_14_fu_916_p3);

assign p_not38_i_i1_fu_1229_p2 = (p_Result_6_fu_1201_p4 != ap_const_lv6_3F? 1'b1: 1'b0);

assign p_not38_i_i_fu_857_p2 = (p_Result_3_fu_829_p4 != ap_const_lv6_3F? 1'b1: 1'b0);

assign p_not_i_fu_578_p2 = (deleted_zeros_fu_561_p3 ^ ap_const_lv1_1);

assign p_not_i_i1_fu_787_p2 = (p_Result_1_fu_777_p4 != ap_const_lv5_0? 1'b1: 1'b0);

assign p_not_i_i2_fu_839_p2 = (p_Result_3_fu_829_p4 != ap_const_lv6_0? 1'b1: 1'b0);

assign p_not_i_i3_fu_1145_p2 = (p_Result_5_fu_1135_p4 != ap_const_lv5_0? 1'b1: 1'b0);

assign p_not_i_i4_fu_1211_p2 = (p_Result_6_fu_1201_p4 != ap_const_lv6_0? 1'b1: 1'b0);

assign p_not_i_i_fu_627_p2 = (deleted_zeros_1_fu_610_p3 ^ ap_const_lv1_1);

assign p_s_fu_1383_p3 = ((tmp_36_fu_1371_p2[0:0] === 1'b1) ? ret_V_fu_1349_p4 : ret_V_1_fu_1377_p2);

assign qb_assign_1_fu_503_p2 = (tmp_14_fu_497_p2 & signbit_1_reg_1464);

assign qb_assign_fu_457_p2 = (tmp_6_fu_451_p2 & signbit_reg_1415);

assign r_V_1_fu_803_p2 = (ap_const_lv17_0 - rhs_V_1_fu_799_p1);

assign r_V_2_fu_1161_p2 = (ap_const_lv17_0 - rhs_V_2_fu_1157_p1);

assign r_V_fu_204_p2 = (lhs_V_fu_196_p1 - rhs_V_fu_200_p1);

assign ret_V_1_fu_1377_p2 = (ap_const_lv11_1 + ret_V_fu_1349_p4);

assign ret_V_fu_1349_p4 = {{p_Val2_18_fu_1344_p3[ap_const_lv32_11 : ap_const_lv32_7]}};

assign rhs_V_1_fu_799_p1 = i_term_limit_V;

assign rhs_V_2_fu_1157_p1 = output_limit_V;

assign rhs_V_fu_200_p1 = feedback_V;

assign sel_tmp15_demorgan_fu_1317_p2 = (tmp_31_reg_1691 | tmp_34_reg_1708);

assign sel_tmp1_fu_1310_p3 = ((tmp_31_reg_1691[0:0] === 1'b1) ? p_Val2_3_17_fu_1248_p3 : p_Val2_4_18_fu_1302_p3);

assign sel_tmp2_fu_1321_p3 = ((sel_tmp15_demorgan_fu_1317_p2[0:0] === 1'b1) ? sel_tmp1_fu_1310_p3 : tmp_29_reg_1686);

assign sel_tmp3_demorgan_fu_979_p2 = (tmp_21_fu_883_p2 | tmp_24_fu_910_p2);

assign sel_tmp3_fu_1328_p2 = (tmp_31_reg_1691 ^ ap_const_lv1_1);

assign sel_tmp4_fu_985_p3 = ((sel_tmp3_demorgan_fu_979_p2[0:0] === 1'b1) ? sel_tmp_fu_971_p3 : tmp_19_reg_1605);

assign sel_tmp5_fu_992_p2 = (tmp_21_fu_883_p2 ^ ap_const_lv1_1);

assign sel_tmp6_fu_1339_p2 = (tmp6_fu_1333_p2 & tmp_34_reg_1708);

assign sel_tmp7_fu_1004_p2 = (tmp5_fu_998_p2 & tmp_24_fu_910_p2);

assign sel_tmp_fu_971_p3 = ((tmp_21_fu_883_p2[0:0] === 1'b1) ? p_Val2_9_fu_896_p3 : p_Val2_s_15_fu_963_p3);

assign tmp1_fu_659_p2 = (tmp22_demorgan_reg_1570 ^ ap_const_lv1_1);

assign tmp22_demorgan_fu_594_p2 = (p_38_i_fu_573_p2 | brmerge40_demorgan_i_fu_589_p2);

assign tmp24_demorgan_fu_643_p2 = (p_38_i_i_fu_622_p2 | brmerge40_demorgan_i_i_fu_638_p2);

assign tmp2_fu_675_p2 = (brmerge40_demorgan_i_reg_1565 | tmp_9_fu_649_p2);

assign tmp3_fu_717_p2 = (tmp24_demorgan_reg_1590 ^ ap_const_lv1_1);

assign tmp4_fu_733_p2 = (brmerge40_demorgan_i_i_reg_1585 | tmp_18_fu_707_p2);

assign tmp5_fu_998_p2 = (brmerge5_fu_949_p2 & sel_tmp5_fu_992_p2);

assign tmp6_fu_1333_p2 = (brmerge7_fu_1288_p2 & sel_tmp3_fu_1328_p2);

assign tmp_11_cast_fu_347_p1 = $signed(tmp_8_fu_339_p3);

assign tmp_11_fu_399_p2 = (tmp_41_fu_395_p1 | tmp_39_fu_379_p3);

assign tmp_13_fu_489_p4 = {{{{ap_const_lv26_0}, {tmp_12_reg_1486}}}, {tmp_11_reg_1481}};

assign tmp_14_fu_497_p2 = (tmp_13_fu_489_p4 != ap_const_lv36_0? 1'b1: 1'b0);

assign tmp_15_fu_508_p1 = qb_assign_1_fu_503_p2;

assign tmp_16_fu_600_p2 = (newsignbit_1_reg_1531 ^ ap_const_lv1_1);

assign tmp_17_fu_540_p2 = (tmp_43_reg_1491 ^ ap_const_lv1_1);

assign tmp_18_fu_707_p2 = (signbit_1_reg_1464 ^ ap_const_lv1_1);

assign tmp_19_fu_757_p3 = ((underflow_1_not_fu_738_p2[0:0] === 1'b1) ? p_Val2_7_mux_fu_743_p3 : p_Val2_7_13_fu_750_p3);

assign tmp_1_fu_351_p1 = $signed(grp_fu_229_p2);

assign tmp_20_fu_872_p3 = {{i_term_limit_V}, {ap_const_lv7_0}};

assign tmp_21_fu_883_p2 = ($signed(tmp_25_cast_fu_869_p1) > $signed(tmp_28_cast_fu_879_p1)? 1'b1: 1'b0);

assign tmp_22_fu_269_p1 = grp_fu_219_p2[0:0];

assign tmp_23_fu_903_p3 = {{r_V_1_reg_1621}, {ap_const_lv7_0}};

assign tmp_24_fu_910_p2 = ($signed(tmp_25_cast_fu_869_p1) < $signed(tmp_23_fu_903_p3)? 1'b1: 1'b0);

assign tmp_25_cast_fu_869_p1 = $signed(tmp_19_reg_1605);

assign tmp_25_fu_923_p2 = (isneg_reg_1626 ^ ap_const_lv1_1);

assign tmp_26_fu_1016_p1 = $signed(p_Val2_12_reg_1600);

assign tmp_27_fu_1019_p1 = $signed(p_Val2_11_fu_1010_p3);

assign tmp_28_cast_fu_879_p1 = tmp_20_fu_872_p3;

assign tmp_28_fu_1055_p2 = (newsignbit_4_fu_1041_p3 ^ ap_const_lv1_1);

assign tmp_29_fu_1093_p3 = ((brmerge6_fu_1074_p2[0:0] === 1'b1) ? p_Val2_15_mux_fu_1079_p3 : p_Val2_1_16_fu_1086_p3);

assign tmp_2_fu_273_p2 = (tmp_22_fu_269_p1 | tmp_fu_253_p3);

assign tmp_30_fu_1105_p3 = {{output_limit_V}, {ap_const_lv7_0}};

assign tmp_31_fu_1117_p2 = ($signed(tmp_42_cast_fu_1101_p1) > $signed(tmp_45_cast_fu_1113_p1)? 1'b1: 1'b0);

assign tmp_32_fu_1167_p3 = {{r_V_2_fu_1161_p2}, {ap_const_lv7_0}};

assign tmp_34_fu_1175_p2 = ($signed(tmp_42_cast_fu_1101_p1) < $signed(tmp_32_fu_1167_p3)? 1'b1: 1'b0);

assign tmp_35_fu_1262_p2 = (isneg_2_reg_1714 ^ ap_const_lv1_1);

assign tmp_36_fu_1371_p2 = (tmp_58_fu_1367_p1 == ap_const_lv7_0? 1'b1: 1'b0);

assign tmp_39_fu_379_p3 = grp_fu_229_p2[ap_const_lv32_A];

assign tmp_41_fu_395_p1 = grp_fu_229_p2[0:0];

assign tmp_42_cast_fu_1101_p1 = $signed(tmp_29_fu_1093_p3);

assign tmp_44_fu_765_p1 = i_term_limit_V[10:0];

assign tmp_45_cast_fu_1113_p1 = tmp_30_fu_1105_p3;

assign tmp_47_fu_817_p1 = r_V_1_fu_803_p2[10:0];

assign tmp_4_fu_479_p2 = (tmp_33_reg_1442 ^ ap_const_lv1_1);

assign tmp_52_fu_1123_p1 = output_limit_V[10:0];

assign tmp_55_fu_1189_p1 = r_V_2_fu_1161_p2[10:0];

assign tmp_57_fu_1359_p3 = p_Val2_18_fu_1344_p3[ap_const_lv32_11];

assign tmp_58_fu_1367_p1 = p_Val2_18_fu_1344_p3[6:0];

assign tmp_5_fu_443_p4 = {{{{ap_const_lv25_0}, {tmp_3_reg_1437}}}, {tmp_2_reg_1432}};

assign tmp_6_fu_451_p2 = (tmp_5_fu_443_p4 != ap_const_lv35_0? 1'b1: 1'b0);

assign tmp_7_fu_462_p1 = qb_assign_fu_457_p2;

assign tmp_8_fu_339_p3 = {{i_term_V}, {ap_const_lv11_0}};

assign tmp_9_fu_649_p2 = (signbit_reg_1415 ^ ap_const_lv1_1);

assign tmp_fu_253_p3 = grp_fu_219_p2[ap_const_lv32_A];

assign tmp_s_fu_551_p2 = (newsignbit_reg_1513 ^ ap_const_lv1_1);

assign underflow_1_fu_722_p2 = (signbit_1_reg_1464 & tmp3_fu_717_p2);

assign underflow_1_not_fu_738_p2 = (tmp4_fu_733_p2 | p_38_i_i_reg_1575);

assign underflow_2_fu_933_p2 = (brmerge39_i_i_reg_1642 & isneg_reg_1626);

assign underflow_2_not_fu_943_p2 = (underflow_2_fu_933_p2 ^ ap_const_lv1_1);

assign underflow_3_fu_1061_p2 = (isneg_1_reg_1662 & tmp_28_reg_1681);

assign underflow_4_fu_1272_p2 = (brmerge39_i_i1_reg_1730 & isneg_2_reg_1714);

assign underflow_4_not_fu_1282_p2 = (underflow_4_fu_1272_p2 ^ ap_const_lv1_1);

assign underflow_fu_664_p2 = (signbit_reg_1415 & tmp1_fu_659_p2);

assign underflow_not_fu_680_p2 = (tmp2_fu_675_p2 | p_38_i_reg_1555);


endmodule //pi_controller

