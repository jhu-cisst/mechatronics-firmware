// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pi_controller,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc6slx45fgg484-2,HLS_INPUT_CLOCK=6.104000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.104000,HLS_SYN_LAT=8,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=488,HLS_SYN_LUT=575}" *)

module pi_controller (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        feedback_V,
        setpoint_V,
        kp_V,
        ki_V,
        kd_V,
        i_term_limit_V,
        output_limit_V,
        error_out_V,
        i_term_out_V,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 9'b1;
parameter    ap_ST_st2_fsm_1 = 9'b10;
parameter    ap_ST_st3_fsm_2 = 9'b100;
parameter    ap_ST_st4_fsm_3 = 9'b1000;
parameter    ap_ST_st5_fsm_4 = 9'b10000;
parameter    ap_ST_st6_fsm_5 = 9'b100000;
parameter    ap_ST_st7_fsm_6 = 9'b1000000;
parameter    ap_ST_st8_fsm_7 = 9'b10000000;
parameter    ap_ST_st9_fsm_8 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv16_8000 = 16'b1000000000000000;
parameter    ap_const_lv36_0 = 36'b000000000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv18_0 = 18'b000000000000000000;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv35_0 = 35'b00000000000000000000000000000000000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] feedback_V;
input  [15:0] setpoint_V;
input  [17:0] kp_V;
input  [17:0] ki_V;
input  [17:0] kd_V;
input  [15:0] i_term_limit_V;
input  [15:0] output_limit_V;
output  [16:0] error_out_V;
output  [35:0] i_term_out_V;
output  [10:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[16:0] error_out_V;
reg[35:0] i_term_out_V;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm = 9'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_25;
reg   [15:0] last_feedback_V = 16'b1000000000000000;
reg   [35:0] i_term_V = 36'b000000000000000000000000000000000000;
wire   [16:0] rhs_V_fu_128_p1;
reg   [16:0] rhs_V_reg_430 = 17'b00000000000000000;
wire  signed [34:0] OP2_V_fu_147_p1;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_66;
wire   [34:0] grp_fu_151_p2;
reg   [34:0] p_Val2_s_reg_461 = 35'b00000000000000000000000000000000000;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_77;
wire   [34:0] grp_fu_161_p2;
reg   [34:0] p_Val2_2_reg_466 = 35'b00000000000000000000000000000000000;
wire  signed [34:0] grp_fu_193_p2;
reg  signed [34:0] p_Val2_5_reg_471 = 35'b00000000000000000000000000000000000;
wire   [35:0] p_Val2_3_fu_206_p2;
reg   [35:0] p_Val2_3_reg_476 = 36'b000000000000000000000000000000000000;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_90;
wire   [35:0] tmp_9_fu_220_p1;
reg   [35:0] tmp_9_reg_482 = 36'b000000000000000000000000000000000000;
wire   [0:0] tmp_s_fu_224_p2;
reg   [0:0] tmp_s_reg_487 = 1'b0;
wire   [16:0] r_V_2_fu_234_p2;
reg   [16:0] r_V_2_reg_493 = 17'b00000000000000000;
wire   [35:0] tmp9_fu_246_p2;
reg   [35:0] tmp9_reg_498 = 36'b000000000000000000000000000000000000;
wire   [35:0] p_Val2_7_fu_284_p3;
reg   [35:0] p_Val2_7_reg_503 = 36'b000000000000000000000000000000000000;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_107;
wire   [35:0] p_Val2_s_4_fu_298_p2;
reg   [35:0] p_Val2_s_4_reg_509 = 36'b000000000000000000000000000000000000;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_116;
wire   [35:0] tmp_2_fu_310_p1;
reg   [35:0] tmp_2_reg_515 = 36'b000000000000000000000000000000000000;
wire   [0:0] tmp_10_fu_314_p2;
reg   [0:0] tmp_10_reg_520 = 1'b0;
wire   [16:0] r_V_3_fu_324_p2;
reg   [16:0] r_V_3_reg_526 = 17'b00000000000000000;
reg   [0:0] tmp_14_reg_531 = 1'b0;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_131;
wire   [17:0] tmp_15_fu_378_p1;
reg   [17:0] tmp_15_reg_536 = 18'b000000000000000000;
reg   [10:0] tmp_18_reg_541 = 11'b00000000000;
reg   [10:0] tmp_17_reg_546 = 11'b00000000000;
wire   [16:0] r_V_1_fu_136_p2;
reg   [16:0] error_out_V_preg = 17'b00000000000000000;
reg   [35:0] i_term_out_V_preg = 36'b000000000000000000000000000000000000;
wire   [16:0] lhs_V_1_fu_132_p1;
wire   [17:0] grp_fu_151_p0;
wire  signed [16:0] grp_fu_151_p1;
wire   [17:0] grp_fu_161_p0;
wire  signed [16:0] grp_fu_161_p1;
wire   [16:0] lhs_V_fu_171_p1;
wire  signed [16:0] r_V_fu_175_p2;
wire   [17:0] grp_fu_193_p0;
wire  signed [35:0] tmp_4_fu_203_p1;
wire   [33:0] tmp_8_fu_212_p3;
wire   [16:0] rhs_V_1_fu_230_p1;
wire  signed [35:0] tmp_fu_240_p1;
wire  signed [35:0] tmp_5_fu_243_p1;
wire   [34:0] tmp_3_fu_252_p3;
wire  signed [35:0] tmp_6_fu_259_p1;
wire   [0:0] tmp_1_fu_263_p2;
wire   [0:0] sel_tmp1_fu_273_p2;
wire   [0:0] sel_tmp2_fu_278_p2;
wire   [35:0] sel_tmp_fu_268_p3;
wire   [33:0] tmp_7_fu_302_p3;
wire   [16:0] rhs_V_2_fu_320_p1;
wire   [34:0] tmp_11_fu_330_p3;
wire  signed [35:0] tmp_12_fu_337_p1;
wire   [0:0] tmp_13_fu_341_p2;
wire   [0:0] sel_tmp5_fu_351_p2;
wire   [0:0] sel_tmp6_fu_356_p2;
wire   [35:0] sel_tmp4_fu_346_p3;
wire   [35:0] p_Val2_4_fu_362_p3;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_269;
wire   [0:0] tmp_16_fu_402_p2;
wire   [10:0] tmp_20_fu_407_p2;
wire   [10:0] tmp_19_fu_412_p3;
wire    grp_fu_151_ce;
wire    grp_fu_161_ce;
wire    grp_fu_193_ce;
reg   [8:0] ap_NS_fsm;
wire   [34:0] grp_fu_151_p00;
wire   [34:0] grp_fu_161_p00;
wire   [34:0] grp_fu_193_p00;


pi_controller_mul_18ns_17s_35_4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 35 ))
pi_controller_mul_18ns_17s_35_4_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_151_p0 ),
    .din1( grp_fu_151_p1 ),
    .ce( grp_fu_151_ce ),
    .dout( grp_fu_151_p2 )
);

pi_controller_mul_18ns_17s_35_4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 35 ))
pi_controller_mul_18ns_17s_35_4_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_161_p0 ),
    .din1( grp_fu_161_p1 ),
    .ce( grp_fu_161_ce ),
    .dout( grp_fu_161_p2 )
);

pi_controller_mul_18ns_17s_35_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 35 ))
pi_controller_mul_18ns_17s_35_3_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_193_p0 ),
    .din1( r_V_fu_175_p2 ),
    .ce( grp_fu_193_ce ),
    .dout( grp_fu_193_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_error_out_V_preg
    if (ap_rst == 1'b1) begin
        error_out_V_preg <= ap_const_lv17_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            error_out_V_preg <= r_V_1_fu_136_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_i_term_V
    if (ap_rst == 1'b1) begin
        i_term_V <= ap_const_lv36_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            i_term_V <= p_Val2_7_fu_284_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_i_term_out_V_preg
    if (ap_rst == 1'b1) begin
        i_term_out_V_preg <= ap_const_lv36_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            i_term_out_V_preg <= p_Val2_7_reg_503;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_last_feedback_V
    if (ap_rst == 1'b1) begin
        last_feedback_V <= ap_const_lv16_8000;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            last_feedback_V <= feedback_V;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_2_reg_466
    if (ap_rst == 1'b1) begin
        p_Val2_2_reg_466 <= ap_const_lv35_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            p_Val2_2_reg_466 <= grp_fu_161_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_3_reg_476
    if (ap_rst == 1'b1) begin
        p_Val2_3_reg_476 <= ap_const_lv36_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            p_Val2_3_reg_476 <= p_Val2_3_fu_206_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_5_reg_471
    if (ap_rst == 1'b1) begin
        p_Val2_5_reg_471 <= ap_const_lv35_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            p_Val2_5_reg_471 <= grp_fu_193_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_7_reg_503
    if (ap_rst == 1'b1) begin
        p_Val2_7_reg_503 <= ap_const_lv36_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
            p_Val2_7_reg_503 <= p_Val2_7_fu_284_p3;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_s_4_reg_509
    if (ap_rst == 1'b1) begin
        p_Val2_s_4_reg_509 <= ap_const_lv36_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            p_Val2_s_4_reg_509 <= p_Val2_s_4_fu_298_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_p_Val2_s_reg_461
    if (ap_rst == 1'b1) begin
        p_Val2_s_reg_461 <= ap_const_lv35_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
            p_Val2_s_reg_461 <= grp_fu_151_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_r_V_2_reg_493
    if (ap_rst == 1'b1) begin
        r_V_2_reg_493 <= ap_const_lv17_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            r_V_2_reg_493 <= r_V_2_fu_234_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_r_V_3_reg_526
    if (ap_rst == 1'b1) begin
        r_V_3_reg_526 <= ap_const_lv17_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            r_V_3_reg_526 <= r_V_3_fu_324_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_rhs_V_reg_430
    if (ap_rst == 1'b1) begin
        rhs_V_reg_430[0] <= 1'b0;
        rhs_V_reg_430[1] <= 1'b0;
        rhs_V_reg_430[2] <= 1'b0;
        rhs_V_reg_430[3] <= 1'b0;
        rhs_V_reg_430[4] <= 1'b0;
        rhs_V_reg_430[5] <= 1'b0;
        rhs_V_reg_430[6] <= 1'b0;
        rhs_V_reg_430[7] <= 1'b0;
        rhs_V_reg_430[8] <= 1'b0;
        rhs_V_reg_430[9] <= 1'b0;
        rhs_V_reg_430[10] <= 1'b0;
        rhs_V_reg_430[11] <= 1'b0;
        rhs_V_reg_430[12] <= 1'b0;
        rhs_V_reg_430[13] <= 1'b0;
        rhs_V_reg_430[14] <= 1'b0;
        rhs_V_reg_430[15] <= 1'b0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
                        rhs_V_reg_430[15 : 0] <= rhs_V_fu_128_p1[15 : 0];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp9_reg_498
    if (ap_rst == 1'b1) begin
        tmp9_reg_498 <= ap_const_lv36_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            tmp9_reg_498 <= tmp9_fu_246_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_10_reg_520
    if (ap_rst == 1'b1) begin
        tmp_10_reg_520 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            tmp_10_reg_520 <= tmp_10_fu_314_p2;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_14_reg_531
    if (ap_rst == 1'b1) begin
        tmp_14_reg_531 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
            tmp_14_reg_531 <= p_Val2_4_fu_362_p3[ap_const_lv32_23];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_15_reg_536
    if (ap_rst == 1'b1) begin
        tmp_15_reg_536 <= ap_const_lv18_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
            tmp_15_reg_536 <= tmp_15_fu_378_p1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_17_reg_546
    if (ap_rst == 1'b1) begin
        tmp_17_reg_546 <= ap_const_lv11_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
            tmp_17_reg_546 <= {{p_Val2_4_fu_362_p3[ap_const_lv32_1C : ap_const_lv32_12]}};
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_18_reg_541
    if (ap_rst == 1'b1) begin
        tmp_18_reg_541 <= ap_const_lv11_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
            tmp_18_reg_541 <= {{p_Val2_4_fu_362_p3[ap_const_lv32_1C : ap_const_lv32_12]}};
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_2_reg_515
    if (ap_rst == 1'b1) begin
        tmp_2_reg_515[18] <= 1'b0;
        tmp_2_reg_515[19] <= 1'b0;
        tmp_2_reg_515[20] <= 1'b0;
        tmp_2_reg_515[21] <= 1'b0;
        tmp_2_reg_515[22] <= 1'b0;
        tmp_2_reg_515[23] <= 1'b0;
        tmp_2_reg_515[24] <= 1'b0;
        tmp_2_reg_515[25] <= 1'b0;
        tmp_2_reg_515[26] <= 1'b0;
        tmp_2_reg_515[27] <= 1'b0;
        tmp_2_reg_515[28] <= 1'b0;
        tmp_2_reg_515[29] <= 1'b0;
        tmp_2_reg_515[30] <= 1'b0;
        tmp_2_reg_515[31] <= 1'b0;
        tmp_2_reg_515[32] <= 1'b0;
        tmp_2_reg_515[33] <= 1'b0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
                        tmp_2_reg_515[33 : 18] <= tmp_2_fu_310_p1[33 : 18];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_9_reg_482
    if (ap_rst == 1'b1) begin
        tmp_9_reg_482[18] <= 1'b0;
        tmp_9_reg_482[19] <= 1'b0;
        tmp_9_reg_482[20] <= 1'b0;
        tmp_9_reg_482[21] <= 1'b0;
        tmp_9_reg_482[22] <= 1'b0;
        tmp_9_reg_482[23] <= 1'b0;
        tmp_9_reg_482[24] <= 1'b0;
        tmp_9_reg_482[25] <= 1'b0;
        tmp_9_reg_482[26] <= 1'b0;
        tmp_9_reg_482[27] <= 1'b0;
        tmp_9_reg_482[28] <= 1'b0;
        tmp_9_reg_482[29] <= 1'b0;
        tmp_9_reg_482[30] <= 1'b0;
        tmp_9_reg_482[31] <= 1'b0;
        tmp_9_reg_482[32] <= 1'b0;
        tmp_9_reg_482[33] <= 1'b0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
                        tmp_9_reg_482[33 : 18] <= tmp_9_fu_220_p1[33 : 18];
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_tmp_s_reg_487
    if (ap_rst == 1'b1) begin
        tmp_s_reg_487 <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            tmp_s_reg_487 <= tmp_s_fu_224_p2;
        end
    end
end

always @ (ap_sig_cseq_ST_st9_fsm_8) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st9_fsm_8) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_25) begin
    if (ap_sig_bdd_25) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_66) begin
    if (ap_sig_bdd_66) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_77) begin
    if (ap_sig_bdd_77) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_90) begin
    if (ap_sig_bdd_90) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_107) begin
    if (ap_sig_bdd_107) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_116) begin
    if (ap_sig_bdd_116) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_131) begin
    if (ap_sig_bdd_131) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_269) begin
    if (ap_sig_bdd_269) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or r_V_1_fu_136_p2 or error_out_V_preg) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        error_out_V = r_V_1_fu_136_p2;
    end else begin
        error_out_V = error_out_V_preg;
    end
end

always @ (p_Val2_7_reg_503 or ap_sig_cseq_ST_st7_fsm_6 or i_term_out_V_preg) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        i_term_out_V = p_Val2_7_reg_503;
    end else begin
        i_term_out_V = i_term_out_V_preg;
    end
end
always @ (ap_start or ap_CS_fsm) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign OP2_V_fu_147_p1 = $signed(r_V_1_fu_136_p2);

assign ap_return = ((tmp_14_reg_531[0:0] === 1'b1) ? tmp_19_fu_412_p3 : tmp_17_reg_546);


always @ (ap_CS_fsm) begin
    ap_sig_bdd_107 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_116 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_131 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_25 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_269 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_66 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_77 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_90 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

assign grp_fu_151_ce = ap_const_logic_1;

assign grp_fu_151_p0 = grp_fu_151_p00;

assign grp_fu_151_p00 = kp_V;

assign grp_fu_151_p1 = OP2_V_fu_147_p1;

assign grp_fu_161_ce = ap_const_logic_1;

assign grp_fu_161_p0 = grp_fu_161_p00;

assign grp_fu_161_p00 = ki_V;

assign grp_fu_161_p1 = OP2_V_fu_147_p1;

assign grp_fu_193_ce = ap_const_logic_1;

assign grp_fu_193_p0 = grp_fu_193_p00;

assign grp_fu_193_p00 = kd_V;

assign lhs_V_1_fu_132_p1 = setpoint_V;

assign lhs_V_fu_171_p1 = last_feedback_V;

assign p_Val2_3_fu_206_p2 = ($signed(i_term_V) + $signed(tmp_4_fu_203_p1));

assign p_Val2_4_fu_362_p3 = ((sel_tmp6_fu_356_p2[0:0] === 1'b1) ? tmp_12_fu_337_p1 : sel_tmp4_fu_346_p3);

assign p_Val2_7_fu_284_p3 = ((sel_tmp2_fu_278_p2[0:0] === 1'b1) ? tmp_6_fu_259_p1 : sel_tmp_fu_268_p3);

assign p_Val2_s_4_fu_298_p2 = (tmp9_reg_498 + p_Val2_7_reg_503);

assign r_V_1_fu_136_p2 = (lhs_V_1_fu_132_p1 - rhs_V_fu_128_p1);

assign r_V_2_fu_234_p2 = (ap_const_lv17_0 - rhs_V_1_fu_230_p1);

assign r_V_3_fu_324_p2 = (ap_const_lv17_0 - rhs_V_2_fu_320_p1);

assign r_V_fu_175_p2 = (lhs_V_fu_171_p1 - rhs_V_reg_430);

assign rhs_V_1_fu_230_p1 = i_term_limit_V;

assign rhs_V_2_fu_320_p1 = output_limit_V;

assign rhs_V_fu_128_p1 = feedback_V;

assign sel_tmp1_fu_273_p2 = (tmp_s_reg_487 ^ ap_const_lv1_1);

assign sel_tmp2_fu_278_p2 = (tmp_1_fu_263_p2 & sel_tmp1_fu_273_p2);

assign sel_tmp4_fu_346_p3 = ((tmp_10_reg_520[0:0] === 1'b1) ? tmp_2_reg_515 : p_Val2_s_4_reg_509);

assign sel_tmp5_fu_351_p2 = (tmp_10_reg_520 ^ ap_const_lv1_1);

assign sel_tmp6_fu_356_p2 = (tmp_13_fu_341_p2 & sel_tmp5_fu_351_p2);

assign sel_tmp_fu_268_p3 = ((tmp_s_reg_487[0:0] === 1'b1) ? tmp_9_reg_482 : p_Val2_3_reg_476);

assign tmp9_fu_246_p2 = ($signed(tmp_fu_240_p1) + $signed(tmp_5_fu_243_p1));

assign tmp_10_fu_314_p2 = ($signed(p_Val2_s_4_fu_298_p2) > $signed(tmp_2_fu_310_p1)? 1'b1: 1'b0);

assign tmp_11_fu_330_p3 = {{r_V_3_reg_526}, {ap_const_lv18_0}};

assign tmp_12_fu_337_p1 = $signed(tmp_11_fu_330_p3);

assign tmp_13_fu_341_p2 = ($signed(p_Val2_s_4_reg_509) < $signed(tmp_12_fu_337_p1)? 1'b1: 1'b0);

assign tmp_15_fu_378_p1 = p_Val2_4_fu_362_p3[17:0];

assign tmp_16_fu_402_p2 = (tmp_15_reg_536 == ap_const_lv18_0? 1'b1: 1'b0);

assign tmp_19_fu_412_p3 = ((tmp_16_fu_402_p2[0:0] === 1'b1) ? tmp_17_reg_546 : tmp_20_fu_407_p2);

assign tmp_1_fu_263_p2 = ($signed(p_Val2_3_reg_476) < $signed(tmp_6_fu_259_p1)? 1'b1: 1'b0);

assign tmp_20_fu_407_p2 = (ap_const_lv11_1 + tmp_18_reg_541);

assign tmp_2_fu_310_p1 = tmp_7_fu_302_p3;

assign tmp_3_fu_252_p3 = {{r_V_2_reg_493}, {ap_const_lv18_0}};

assign tmp_4_fu_203_p1 = $signed(p_Val2_2_reg_466);

assign tmp_5_fu_243_p1 = p_Val2_5_reg_471;

assign tmp_6_fu_259_p1 = $signed(tmp_3_fu_252_p3);

assign tmp_7_fu_302_p3 = {{output_limit_V}, {ap_const_lv18_0}};

assign tmp_8_fu_212_p3 = {{i_term_limit_V}, {ap_const_lv18_0}};

assign tmp_9_fu_220_p1 = tmp_8_fu_212_p3;

assign tmp_fu_240_p1 = $signed(p_Val2_s_reg_461);

assign tmp_s_fu_224_p2 = ($signed(p_Val2_3_fu_206_p2) > $signed(tmp_9_fu_220_p1)? 1'b1: 1'b0);
always @ (posedge ap_clk) begin
    rhs_V_reg_430[16] <= 1'b0;
    tmp_9_reg_482[17:0] <= 18'b000000000000000000;
    tmp_9_reg_482[35:34] <= 2'b00;
    tmp_2_reg_515[17:0] <= 18'b000000000000000000;
    tmp_2_reg_515[35:34] <= 2'b00;
end



endmodule //pi_controller

